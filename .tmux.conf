############################################################
# Binds
############################################################

# C-g*2でtmux内のプログラムにC-gを送る
bind C-g send-prefix

# prefixキーをC-gに変更する
# set -g prefix C-g

# C-bのキーバインドを解除する
unbind C-b

# Vimのキーバインドでペインを移動する
#bind h select-pane -L
#bind j select-pane -D
#bind k select-pane -U
#bind l select-pane -R
bind C-h select-pane -L
bind C-j select-pane -D
bind C-k select-pane -U
bind C-l select-pane -R

# Vimのキーバインドでペインをリサイズする
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

#bind -r n select-window -t :-
#bind -r p select-window -t :+
bind -r C-n select-window -t :-
bind -r C-p select-window -t :+

# | でペインを縦に分割する
bind | split-window -h

# - でペインを横に分割する
bind - split-window -v

# 設定ファイルをリロードする
bind r source-file ~/.tmux.conf \; display "Reloaded!"

## コピーモードの操作をvi風に設定する
# bind-key -t vi-copy v begin-selection
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"


############################################################
# Options
############################################################

# set -g buffer-limit
# buffer-limit number
#   Set the number of buffers; as new buffers are added to the top of the stack, old ones are removed from the bottom if necessary to maintain this maximum
#   length.

# set -g command-alias
# command-alias[] name=value
#   This is an array of custom aliases for commands.  If an unknown command matches name, it is replaced with value.  For example, after:
#         set -s command-alias[100] zoom='resize-pane -Z'
#   Using:
#         zoom -t:.1
#   Is equivalent to:
#         resize-pane -Z -t:.1
#   Note that aliases are expanded when a command is parsed rather than when it is executed, so binding an alias with bind-key will bind the expanded form.

# 256色端末を使用する
set -g default-terminal "screen-256color"
# default-terminal terminal
#   Set the default terminal for new windows created in this session - the default value of the TERM environment variable.  For tmux to work correctly, this
#   must be set to ‘screen’, ‘tmux’ or a derivative of them.

# キーストロークのディレイを減らす
set -g escape-time 1
set -g exit-unattached off
# exit-unattached [on | off]
#   If enabled, the server will exit when there are no attached clients.

# set -g focus-events
# focus-events [on | off]
#   When enabled, focus events are requested from the terminal if supported and passed through to applications running in tmux.  Attached clients should be
#   detached and attached again after changing this option.

# set -g history-file
# history-file path
#   If not empty, a file to which tmux will write command prompt history on exit and load it from on start.

# set -g message-limit
# message-limit number
#   Set the number of error or information messages to save in the message log for each client.  The default is 100.

# set -g set-clipboard
# set-clipboard [on | external | off]
#   Attempt to set the terminal clipboard content using the xterm(1) escape sequence, if there is an Ms entry in the terminfo(5) description (see the TERMINFO
#   EXTENSIONS section).
#   If set to on, tmux will both accept the escape sequence to create a buffer and attempt to set the terminal clipboard.  If set to external, tmux will
#   attempt to set the terminal clipboard but ignore attempts by applications to set tmux buffers.  If off, tmux will neither accept the clipboard escape
#   sequence nor attempt to set the clipboard.
#   Note that this feature needs to be enabled in xterm(1) by setting the resource:
#         disallowedWindowOps: 20,21,SetXprop
#   Or changing this property from the xterm(1) interactive menu when required.

# set -g terminal-overrides 'xterm:colors=256'
# terminal-overrides[] string
#   Allow terminal descriptions read using terminfo(5) to be overridden.  Each entry is a colon-separated string made up of a terminal type pattern (matched
#   using fnmatch(3)) and a set of name=value entries.
#   For example, to set the ‘clear’ terminfo(5) entry to ‘\e[H\e[2J’ for all terminal types matching ‘rxvt*’:
#         rxvt*:clear=\e[H\e[2J
#   The terminal entry value is passed through strunvis(3) before interpretation.

# set -g activity-action
# activity-action [any | none | current | other]
#   Set action on window activity when monitor-activity is on.  any means activity in any window linked to a session causes a bell or message (depending on
#   visual-activity) in the current window of that session, none means all activity is ignored (equivalent to monitor-activity being off), current means only
#   activity in windows other than the current window are ignored and other means activity in the current window is ignored but not those in other windows.

# set -g assume-paste-time
# assume-paste-time milliseconds
#   If keys are entered faster than one in milliseconds, they are assumed to have been pasted rather than typed and tmux key bindings are not processed.  The
#   default is one millisecond and zero disables.

# ウィンドウのインデックスを1から始める
set -g base-index 1
# base-index index
#   Set the base index from which an unused index should be searched when a new window is created.  The default is zero.

# set -g bell-action
# bell-action [any | none | current | other]
#   Set action on a bell in a window when monitor-bell is on.  The values are the same as those for activity-action.

## クリップボード共有を有効にする
# set-option -g default-command "reattach-to-user-namespace -l zsh"
# set -g default-command
# default-command shell-command
#   Set the command used for new windows (if not specified when the window is created) to shell-command, which may be any sh(1) command.  The default is an
#   empty string, which instructs tmux to create a login shell using the value of the default-shell option.

# set -g default-shell
# default-shell path
#   Specify the default shell.  This is used as the login shell for new windows when the default-command option is set to empty, and must be the full path of
#   the executable.  When started tmux tries to set a default value from the first suitable of the SHELL environment variable, the shell returned by
#   getpwuid(3), or /bin/sh.  This option should be configured when tmux is used as a login shell.

# set -g destroy-unattached
# destroy-unattached [on | off]
#   If enabled and the session is no longer attached to any clients, it is destroyed.

# set -g detach-on-destroy
# detach-on-destroy [on | off]
#   If on (the default), the client is detached when the session it is attached to is destroyed.  If off, the client is switched to the most recently active of
#   the remaining sessions.

# set -g display-panes-active-colour
# display-panes-active-colour colour
#   Set the colour used by the display-panes command to show the indicator for the active pane.

# set -g display-panes-colour
# display-panes-colour colour
#   Set the colour used by the display-panes command to show the indicators for inactive panes.

# set -g display-panes-time
# display-panes-time time
#   Set the time in milliseconds for which the indicators shown by the display-panes command appear.

# set -g display-time
# display-time time
#   Set the amount of time for which status line messages and other on-screen indicators are displayed.  If set to 0, messages and indicators are displayed
#   until a key is pressed.  time is in milliseconds.

# Scroll History
set -g history-limit 30000
# history-limit lines
#   Set the maximum number of lines held in window history.  This setting applies only to new windows - existing window histories are not resized and retain
#   the limit at the point they were created.

# set -g key-table
# key-table key-table
#   Set the default key table to key-table instead of root.

# set -g lock-after-time
# lock-after-time number
#   Lock the session (like the lock-session command) after number seconds of inactivity.  The default is not to lock (set to 0).

# set -g lock-command
# lock-command shell-command
#   Command to run when locking each client.  The default is to run lock(1) with -np.

# set -g message-command-style
# message-command-style style
#   Set status line message command style, where style is a comma-separated list of characteristics to be specified.
#   These may be ‘bg=colour’ to set the background colour, ‘fg=colour’ to set the foreground colour, and a list of attributes as specified below.
#   The colour is one of: black, red, green, yellow, blue, magenta, cyan, white, aixterm bright variants (if supported: brightred, brightgreen, and so on),
#   colour0 to colour255 from the 256-colour set, default, or a hexadecimal RGB string such as ‘#ffffff’, which chooses the closest match from the default
#   256-colour set.
#   The attributes is either none or a comma-delimited list of one or more of: bright (or bold), dim, underscore, blink, reverse, hidden, italics, or
#   strikethrough to turn an attribute on, or an attribute prefixed with ‘no’ to turn one off.
#   Examples are:
#         fg=yellow,bold,underscore,blink
#         bg=black,fg=default,noreverse
#   With the -a flag to the set-option command the new style is added otherwise the existing style is replaced.

# コマンドラインの色を設定する
set -ag message-style fg=white
set -ag message-style bg=black
# set -ag message-style attr=bright

# マウス操作を有効にする
set -g mouse on

set -g prefix C-g
# set -g prefix2

set -g renumber-windows on
# renumber-windows [on | off]
#   If on, when a window is closed in a session, automatically renumber the other windows in numerical order.  This respects the base-index option if it has
#   been set.  If off, do not renumber the windows.

# set -g repeat-time
# repeat-time time
#   Allow multiple commands to be entered without pressing the prefix-key again in the specified time milliseconds (the default is 500).  Whether a key repeats
#   may be set when it is bound using the -r flag to bind-key.  Repeat is enabled for the default keys bound to the resize-pane command.

# set -g set-titles
# set-titles [on | off]
#   Attempt to set the client terminal title using the tsl and fsl terminfo(5) entries if they exist.  tmux automatically sets these to the \e]0;...\007
#   sequence if the terminal appears to be xterm(1).  This option is off by default.

# set -g set-titles-string
# set-titles-string string
#   String used to set the window title if set-titles is on.  Formats are expanded, see the FORMATS section.

# set -g silence-action
# silence-action [any | none | current | other]
#   Set action on window silence when monitor-silence is on.  The values are the same as those for activity-action.


set -g status on
# リフレッシュの間隔を設定する(デフォルト 15秒)
set -g status-interval 60
# status-interval interval
#   Update the status line every interval seconds.  By default, updates will occur every 15 seconds.  A setting of zero disables redrawing at interval.

# ウィンドウリストの位置を中心寄せにする
set -g status-justify centre
set -g status-keys vi
## 左パネルを設定する
# set -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"
set -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=magenta]#P"
set -g status-left-length 40
# set -g status-left-style
# status-left-style style
#  Set the style of the left part of the status line.  For how to specify style, see the message-command-style option.

## ステータスバーを上部に表示する
set -g status-position top
# 右パネルを設定する
set -g status-right "#[fg=cyan][%Y-%m-%d(%a) %H:%M]"
# set -g status-right-length
# status-right-length length
#  Set the maximum length of the right component of the status line.  The default is 40.
# set -g status-right-style
# status-right-style style
#  Set the style of the right part of the status line.  For how to specify style, see the message-command-style option.
# ステータスバーの色を設定する
set -ag status-style fg=white
set -ag status-style bg=black

# set -g update-environment
# update-environment[] variable
#   Set list of environment variables to be copied into the session environment when a new session is created or an existing session is attached.  Any vari‐
#   ables that do not exist in the source environment are set to be removed from the session environment (as if -r was given to the set-environment command).

# set -g user-keys
# user-keys[] key
#   Set list of user-defined key escape sequences.  Each item is associated with a key named ‘User0’, ‘User1’, and so on.
#   For example:
#         set -s user-keys[0] "\e[5;30012~"
#         bind User0 resize-pane -L 3

# ヴィジュアルノーティフィケーションを有効にする
set -g visual-activity on
# visual-activity [on | off | both]
#   If on, display a message instead of sending a bell when activity occurs in a window for which the monitor-activity window option is enabled.  If set to
#   both, a bell and a message are produced.

# set -g visual-bell
# visual-bell [on | off | both]
#   If on, a message is shown on a bell in a window for which the monitor-bell window option is enabled instead of it being passed through to the terminal
#   (which normally makes a sound).  If set to both, a bell and a message are produced.  Also see the bell-action option.

# set -g visual-silence
# visual-silence [on | off | both]
#   If monitor-silence is enabled, prints a message after the interval has expired on a given window instead of sending a bell.  If set to both, a bell and a
#   message are produced.

# set -g word-separators
# word-separators string
#   Sets the session's conception of what characters are considered word separators, for the purposes of the next and previous word commands in copy mode.  The
#   default is ‘ -_@’.


############################################################
# Window Options
############################################################

# setw -g aggressive-resize
# aggressive-resize [on | off]
#   Aggressively resize the chosen window.  This means that tmux will resize the window to the size of the smallest session for which it is the current window,
#   rather than the smallest session to which it is attached.  The window may resize when the current window is changed on another sessions; this option is
#   good for full-screen programs which support SIGWINCH and poor for interactive programs such as shells.

# setw -g allow-rename
# allow-rename [on | off]
#   Allow programs to change the window name using a terminal escape sequence (\ek...\e\\).  The default is on.

# setw -g alternate-screen
# alternate-screen [on | off]
#   This option configures whether programs running inside tmux may use the terminal alternate screen feature, which allows the smcup and rmcup terminfo(5)
#   capabilities.  The alternate screen feature preserves the contents of the window when an interactive application starts and restores it on exit, so that
#   any output visible before the application starts reappears unchanged after it exits.  The default is on.

# setw -g automatic-rename
# automatic-rename [on | off]
#   Control automatic window renaming.  When this setting is enabled, tmux will rename the window automatically using the format specified by
#   automatic-rename-format.  This flag is automatically disabled for an individual window when a name is specified at creation with new-window or new-session,
#   or later with rename-window, or with a terminal escape sequence.  It may be switched off globally with:

#        set-window-option -g automatic-rename off

# setw -g automatic-rename-format
# automatic-rename-format format
#   The format (see FORMATS) used when the automatic-rename option is enabled.

# setw -g clock-mode-colour
# clock-mode-colour colour
#   Set clock colour.

# setw -g clock-mode-style
# clock-mode-style [12 | 24]
#   Set clock hour format.

# setw -g force-height
# force-height height
# setw -g force-width
# force-width width
#   Prevent tmux from resizing a window to greater than width or height.  A value of zero restores the default unlimited setting.

# setw -g main-pane-height
# main-pane-height height
# setw -g main-pane-width
# main-pane-width width
#   Set the width or height of the main (left or top) pane in the main-horizontal or main-vertical layouts.

# コピーモードを設定する
setw -g mode-keys vi
# mode-keys [vi | emacs]
#   Use vi or emacs-style key bindings in copy mode.  The default is emacs, unless VISUAL or EDITOR contains ‘vi’.

# setw -g mode-style
# mode-style style
#   Set window modes style.  For how to specify style, see the message-command-style option.

setw -g monitor-activity on
# monitor-activity [on | off]
#   Monitor for activity in the window.  Windows with activity are highlighted in the status line.

# setw -g monitor-bell
# monitor-bell [on | off]
#   Monitor for a bell in the window.  Windows with a bell are highlighted in the status line.

# setw -g monitor-silence
# monitor-silence [interval]
#   Monitor for silence (no activity) in the window within interval seconds.  Windows that have been silent for the interval are highlighted in the status
#   line.  An interval of zero disables the monitoring.

# setw -g other-pane-height
# other-pane-height height
#   Set the height of the other panes (not the main pane) in the main-horizontal layout.  If this option is set to 0 (the default), it will have no effect.  If
#   both the main-pane-height and other-pane-height options are set, the main pane will grow taller to make the other panes the specified height, but will
#   never shrink to do so.

# setw -g other-pane-width
# other-pane-width width
#   Like other-pane-height, but set the width of other panes in the main-vertical layout.

# アクティブなペインを目立たせる
setw -ag pane-active-border-style fg=white
setw -ag pane-active-border-style bg=black
# pane-active-border-style style
#   Set the pane border style for the currently active pane.  For how to specify style, see the message-command-style option.  Attributes are ignored.

# setw -g pane-base-index
# pane-base-index index
#   Like base-index, but set the starting index for pane numbers.

# setw -g pane-border-format
# pane-border-format format
#   Set the text shown in pane border status lines.

# setw -g pane-border-status
# pane-border-status [off | top | bottom]
#   Turn pane border status lines off or set their position.

# ペインボーダーの色を設定する
setw -ag pane-border-style fg=green
setw -ag pane-border-style bg=black
# pane-border-style style
#   Set the pane border style for panes aside from the active pane.  For how to specify style, see the message-command-style option.  Attributes are ignored.

# setw -g remain-on-exit
# remain-on-exit [on | off]
#   A window with this flag set is not destroyed when the program running in it exits.  The window may be reactivated with the respawn-window command.

# setw -g synchronize-panes
# synchronize-panes [on | off]
#   Duplicate input to any pane to all other panes in the same window (only for panes that are not in any special mode).

# setw -g window-active-style
# window-active-style style
#   Set the style for the window's active pane.  For how to specify style, see the message-command-style option.

# setw -g window-status-activity-style
# window-status-activity-style style
#   Set status line style for windows with an activity alert.  For how to specify style, see the message-command-style option.

# setw -g window-status-bell-style
# window-status-bell-style style
#   Set status line style for windows with a bell alert.  For how to specify style, see the message-command-style option.

# setw -g window-status-current-format
# window-status-current-format string
#   Like window-status-format, but is the format used when the window is the current window.

# アクティブなウィンドウを目立たせる
setw -ag window-status-current-style fg=white
setw -ag window-status-current-style bg=red
# setw -ag window-status-current-style attr=bright
# window-status-current-style style
#   Set status line style for the currently active window.  For how to specify style, see the message-command-style option.

# setw -g window-status-format
# window-status-format string
#   Set the format in which the window is displayed in the status line window list.  See the status-left option for details of special character sequences
#   available.  The default is ‘#I:#W#F’.

# setw -g window-status-last-style
# window-status-last-style style
#   Set status line style for the last active window.  For how to specify style, see the message-command-style option.

# setw -g window-status-separator
# window-status-separator string
#   Sets the separator drawn between windows in the status line.  The default is a single space character.

# ウィンドウリストの色を設定する
setw -ag window-status-style fg=cyan
setw -ag window-status-style bg=default
# setw -ag window-status-style attr=dim
# window-status-style style
#   Set status line style for a single window.  For how to specify style, see the message-command-style option.

# setw -g window-style
# window-style style
#   Set the default window style.  For how to specify style, see the message-command-style option.

# setw -g wrap-search
# wrap-search [on | off]
#   If this option is set, searches will wrap around the end of the pane contents.  The default is on.

# setw -g xterm-keys
# xterm-keys [on | off]
#   If this option is set, tmux will generate xterm(1) -style function key sequences; these have a number included to indicate modifiers such as Shift, Alt or
#   Ctrl.

# ペインのインデックスを1から始める
setw -g pane-base-index 1

# Set ability to capture on start and restore on exit window data when running an application
setw -g alternate-screen on

